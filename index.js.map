{"version":3,"file":"index.js","sources":["../src/js/story-api-js","../src/js/story-js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://paw-hut.b.goit.study/api';\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getFeedbacks(page, limit) {\n  try {\n    const { data } = await axios.get('/feedbacks', {\n      params: {\n        page: 1,\n        limit: 20,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import Swiper from 'swiper';\nimport { Navigation, Pagination } from 'swiper/modules';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport { getFeedbacks } from './story-api-js';\n\nfunction creatStoriesCard(events) {\n  const cardStoryEl = document.querySelector('.swiper-wrapper-story');\n\n  const markup = events\n    .map(({ rate, description, author }) => {\n      return `<div class=\"swiper-slide swiper-slide-story\" role=\"listitem\">\n                <div class=\"story-card\">\n                  <div class=\"story-rating\">${rate}</div>\n                  <p class=\"story-review\">${description}</p>\n                  <p class=\"story-author\">${author}</p>\n                </div>\n              </div>`;\n    })\n    .join('');\n\n  cardStoryEl.innerHTML = markup;\n}\n\nfunction initSwiper() {\n  // Чекаємо, щоб елементи були в DOM\n  const swiperContainer = document.querySelector('.swiper-story');\n  if (!swiperContainer) {\n    console.error('Swiper container not found');\n    return;\n  }\n\n  const swiper = new Swiper('.swiper-story', {\n    modules: [Navigation, Pagination],\n    slidesPerView: 1,\n    spaceBetween: 32,\n\n    // Використовуємо стандартні класи Swiper\n    wrapperClass: 'swiper-wrapper-story',\n    slideClass: 'swiper-slide-story',\n\n    navigation: {\n      nextEl: '.story-button-next',\n      prevEl: '.story-button-prev',\n    },\n\n    pagination: {\n      el: '.swiper-pagination-story',\n      clickable: true,\n      dynamicBullets: true,\n      dynamicMainBullets: 5,\n    },\n\n    breakpoints: {\n      768: {\n        slidesPerView: 2,\n        spaceBetween: 24,\n      },\n      1440: {\n        slidesPerView: 2,\n        spaceBetween: 32,\n      },\n    },\n\n    on: {\n      init: function (swiper) {\n        updateNavButtons(swiper);\n        console.log('Swiper initialized');\n      },\n      slideChange: function (swiper) {\n        updateNavButtons(swiper);\n      },\n    },\n  });\n\n  return swiper;\n}\n\n// Функція для оновлення стану навігаційних кнопок\nfunction updateNavButtons(swiper) {\n  const prevButton = document.querySelector('.story-button-prev');\n  const nextButton = document.querySelector('.story-button-next');\n\n  if (!prevButton || !nextButton) {\n    console.error('Navigation buttons not found');\n    return;\n  }\n\n  if (swiper.isBeginning) {\n    prevButton.disabled = true;\n    prevButton.classList.add('swiper-button-disabled');\n  } else {\n    prevButton.disabled = false;\n    prevButton.classList.remove('swiper-button-disabled');\n  }\n\n  if (swiper.isEnd) {\n    nextButton.disabled = true;\n    nextButton.classList.add('swiper-button-disabled');\n  } else {\n    nextButton.disabled = false;\n    nextButton.classList.remove('swiper-button-disabled');\n  }\n}\n\nasync function initStories() {\n  try {\n    const data = await getFeedbacks();\n    if (data && data.feedbacks && data.feedbacks.length > 0) {\n      creatStoriesCard(data.feedbacks);\n\n      // Невелика затримка для впевненості, що DOM оновився\n      setTimeout(() => {\n        initSwiper();\n      }, 100);\n    } else {\n      console.error('No feedbacks data received');\n    }\n  } catch (error) {\n    console.error('Error loading feedbacks:', error);\n\n    creatStoriesCard(testData);\n    setTimeout(() => {\n      initSwiper();\n    }, 100);\n  }\n}\n\n// Ініціалізація після завантаження DOM\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', initStories);\n} else {\n  initStories();\n}\n"],"names":["BASE_URL","axios","getFeedbacks","page","limit","data","error","creatStoriesCard","events","cardStoryEl","markup","rate","description","author","initSwiper","Swiper","Navigation","Pagination","swiper","updateNavButtons","prevButton","nextButton","initStories"],"mappings":"2wBAEA,MAAMA,EAAW,mCACjBC,EAAM,SAAS,QAAUD,EAElB,eAAeE,EAAaC,EAAMC,EAAO,CAC9C,GAAI,CACF,KAAM,CAAE,KAAAC,CAAM,EAAG,MAAMJ,EAAM,IAAI,aAAc,CAC7C,OAAQ,CACN,KAAM,EACN,MAAO,EACR,CACP,CAAK,EACD,OAAOI,CACR,OAAQC,EAAO,CACd,QAAQ,MAAMA,CAAK,CACpB,CACH,CCVA,SAASC,EAAiBC,EAAQ,CAChC,MAAMC,EAAc,SAAS,cAAc,uBAAuB,EAE5DC,EAASF,EACZ,IAAI,CAAC,CAAE,KAAAG,EAAM,YAAAC,EAAa,OAAAC,CAAM,IACxB;AAAA;AAAA,8CAEiCF,CAAI;AAAA,4CACNC,CAAW;AAAA,4CACXC,CAAM;AAAA;AAAA,qBAG7C,EACA,KAAK,EAAE,EAEVJ,EAAY,UAAYC,CAC1B,CAEA,SAASI,GAAa,CAGpB,GAAI,CADoB,SAAS,cAAc,eAAe,EACxC,CACpB,QAAQ,MAAM,4BAA4B,EAC1C,MACD,CA6CD,OA3Ce,IAAIC,EAAO,gBAAiB,CACzC,QAAS,CAACC,EAAYC,CAAU,EAChC,cAAe,EACf,aAAc,GAGd,aAAc,uBACd,WAAY,qBAEZ,WAAY,CACV,OAAQ,qBACR,OAAQ,oBACT,EAED,WAAY,CACV,GAAI,2BACJ,UAAW,GACX,eAAgB,GAChB,mBAAoB,CACrB,EAED,YAAa,CACX,IAAK,CACH,cAAe,EACf,aAAc,EACf,EACD,KAAM,CACJ,cAAe,EACf,aAAc,EACf,CACF,EAED,GAAI,CACF,KAAM,SAAUC,EAAQ,CACtBC,EAAiBD,CAAM,EACvB,QAAQ,IAAI,oBAAoB,CACjC,EACD,YAAa,SAAUA,EAAQ,CAC7BC,EAAiBD,CAAM,CACxB,CACF,CACL,CAAG,CAGH,CAGA,SAASC,EAAiBD,EAAQ,CAChC,MAAME,EAAa,SAAS,cAAc,oBAAoB,EACxDC,EAAa,SAAS,cAAc,oBAAoB,EAE9D,GAAI,CAACD,GAAc,CAACC,EAAY,CAC9B,QAAQ,MAAM,8BAA8B,EAC5C,MACD,CAEGH,EAAO,aACTE,EAAW,SAAW,GACtBA,EAAW,UAAU,IAAI,wBAAwB,IAEjDA,EAAW,SAAW,GACtBA,EAAW,UAAU,OAAO,wBAAwB,GAGlDF,EAAO,OACTG,EAAW,SAAW,GACtBA,EAAW,UAAU,IAAI,wBAAwB,IAEjDA,EAAW,SAAW,GACtBA,EAAW,UAAU,OAAO,wBAAwB,EAExD,CAEA,eAAeC,GAAc,CAC3B,GAAI,CACF,MAAMjB,EAAO,MAAMH,IACfG,GAAQA,EAAK,WAAaA,EAAK,UAAU,OAAS,GACpDE,EAAiBF,EAAK,SAAS,EAG/B,WAAW,IAAM,CACfS,GACD,EAAE,GAAG,GAEN,QAAQ,MAAM,4BAA4B,CAE7C,OAAQR,EAAO,CACd,QAAQ,MAAM,2BAA4BA,CAAK,EAE/CC,EAAiB,QAAQ,EACzB,WAAW,IAAM,CACfO,GACD,EAAE,GAAG,CACP,CACH,CAGI,SAAS,aAAe,UAC1B,SAAS,iBAAiB,mBAAoBQ,CAAW,EAEzDA"}